{"version":3,"sources":["Images/spotify-logo.png","Components/Login.js","Components/PlaylistRender.js","Components/PlaylistContainer.js","Components/PlaylistFetch.js","Images/cd.png","Components/SideBar.js","Components/Player.js","Components/SongRender.js","Components/SongListContainer.js","Components/Dashboard.js","Images/potato.png","Components/NavBar.js","Components/App.js","index.js"],"names":["Login","AUTH_URL","className","Container","style","minHeight","src","SpotifyLogo","alt","href","PlaylistRender","playlist","id","name","tracks","images","handlePlaylistClick","image","length","url","onClick","total","PlaylistContainer","playlists","map","PlaylistFetch","accessToken","genrePlaylists","useState","playlistResp","setPlaylistResp","useEffect","axios","get","headers","Authorization","then","resp","data","items","catch","error","console","log","SideBar","handleGenreChange","recentlyPlayedTrack","chooseTrack","genreList","setGenreList","userImg","setUserImg","categories","genre","icons","mostRecent","track","uri","album","CDImage","artists","Player","trackUri","songURIs","offset","play","setPlay","token","showSaveIcon","autoPlay","initialVolume","uris","styles","activeColor","bgColor","color","loaderColor","sliderColor","trackArtistColor","trackNameColor","SongRender","song","index","img","time","minutes","Math","floor","seconds","toFixed","msConverter","duration_ms","SongListContainer","songList","is_local","Dashboard","setSongURIs","currentGenreID","setCurrentGenreID","setGenrePlaylists","setSongList","playingTrack","setPlayingTrack","setRecentlyPlayedTrack","setOffset","i","containsSong","newArr","filter","item","slice","filteredList","uriList","to","linkStyles","width","padding","margin","background","textDecoration","Navbar","setAccessToken","history","useHistory","exact","activeStyle","push","potato","params","URLSearchParams","window","location","hash","substr","App","accessTokenState","path","ReactDOM","render","StrictMode","component","document","getElementById"],"mappings":"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","file":"static/js/main.a9571258.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spotify-logo.a05ad32d.png\";","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport '../Styling/Login.css'\nimport SpotifyLogo from '../Images/spotify-logo.png'\n\nconst client_ID = \"d464d95ff32b4e2aa6de17a36668212d\" //public\nconst redirect_URI = \"http://localhost:3000/dashboard\"\n\nexport default function Login() {\n    const AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${client_ID}&response_type=token&redirect_uri=${redirect_URI}&scope=streaming%20user-read-email%20user-read-private%20playlist-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state`\n\n    return (\n        <div className=\"login-component\">\n            <Container\n            className=\"d-flex flex-column justify-content-center align-items-center\" // boostrap css\n            style={{minHeight: \"94vh\"}}>\n                <img className=\"login-logo\" src={SpotifyLogo} alt=\"spotify logo\" />\n                <a className=\"btn btn-success btn-lg\" href={AUTH_URL}>Login With Spotify</a>\n            </Container>\n        </div>\n    )\n}","import React from 'react';\nimport '../Styling/PlaylistRender.css'\n\nfunction PlaylistRender({ playlist:{id, name, tracks, images}, handlePlaylistClick }) {\n    let image = ''\n    images.length === 0 ? image='https://www.pngall.com/wp-content/uploads/2016/04/Compact-Disk-Download-PNG.png' : image=images[0].url\n    return (\n        <div className=\"card\">\n            <div className=\"playlist-info\" onClick={() => {\n                handlePlaylistClick(id)\n            }}>\n                <img src={image} className=\"playlist-img\" />\n                <h5>{name}</h5>\n                <p>{tracks.total} Songs</p>\n            </div>\n        </div>\n    );\n}\n\nexport default PlaylistRender;","import React from 'react';\nimport PlaylistRender from './PlaylistRender';\nimport '../Styling/PlaylistContainer.css'\n\nfunction PlaylistContainer({ playlists, handlePlaylistClick }) {\n    return (\n        <div className=\"playlist-flex-container\">\n            {playlists.map(playlist => <PlaylistRender key={playlist.id} playlist={playlist} handlePlaylistClick={handlePlaylistClick} />)}\n        </div>\n    )\n}\n\nexport default PlaylistContainer;","import axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport PlaylistContainer from './PlaylistContainer'\n\n\nexport default function PlaylistFetch({ accessToken, genrePlaylists, handlePlaylistClick }) {\n    \n    const [playlistResp , setPlaylistResp] = useState([])// will hold response from playlist get\n\n    useEffect(() => {\n        if(accessToken) {\n            axios.get(\"https://api.spotify.com/v1/browse/featured-playlists?limit=12\", {\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ` + accessToken\n                }\n            })\n            .then(resp => setPlaylistResp(resp.data.playlists.items))\n            .catch((error) => console.log(error))\n        }\n    }, [accessToken])\n\n    if(!accessToken) return null\n    \n    return (\n        genrePlaylists.length > 0 ? <PlaylistContainer handlePlaylistClick={handlePlaylistClick} playlists={genrePlaylists} /> : <PlaylistContainer playlists={playlistResp} handlePlaylistClick={handlePlaylistClick} />\n    )\n}","export default __webpack_public_path__ + \"static/media/cd.2caffa81.png\";","import { useState, useEffect } from 'react'\nimport '../Styling/SideBar.css'\nimport axios from 'axios'\nimport CDImage from '../Images/cd.png'\n\nexport default function SideBar({ accessToken, handleGenreChange, recentlyPlayedTrack, chooseTrack }) {\n    const [genreList, setGenreList] = useState(null)\n    const [userImg, setUserImg] = useState('')\n\n\n    useEffect(() => {\n        if(accessToken) {\n            axios.get('https://api.spotify.com/v1/browse/categories?limit=5', {\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ` + accessToken\n                }\n            })\n            .then(resp => setGenreList(resp))\n            .catch(error => console.log(error))\n            axios.get('https://api.spotify.com/v1/me', {\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ` + accessToken\n                }\n            })\n            .then(resp => setUserImg(resp.data.images[0].url))\n            .catch(error => console.log(error))\n        }\n    }, [accessToken])\n\n    if(genreList){\n        return (\n            <>\n                <h3 className=\"genre-ul-title\">Genres</h3>\n                <ul className = \"genre-ul\">\n                    <li className=\"genre-li-container\" id=\"user-library\" onClick={() => handleGenreChange(\"\") }>\n                        <img className=\"genre-li-img\" src={userImg} />\n                        <span className=\"genre-li-span\">\n                                <p>Your Library</p>\n                        </span>\n                    </li>\n                    {genreList.data.categories.items.map(genre => {\n                        return (\n                        <li key={genre.id} className=\"genre-li-container\" onClick={() => handleGenreChange(genre.id)}>\n                            <img className=\"genre-li-img\" src={genre.icons[0].url} />\n                            <span className=\"genre-li-span\">\n                                <p>{genre.name}</p>\n                            </span>\n                        </li>\n                        )\n                    })}\n                </ul>\n                <h3>Recently Played</h3>\n                <ul className=\"recently-played-ul\">\n                    \n                    {recentlyPlayedTrack.map(mostRecent => {\n                        return (\n                        <li key={mostRecent.track.id} className=\"recently-played-li-container\"  onClick={() => {\n                            chooseTrack(mostRecent.track.uri, mostRecent)\n                        }}>\n                            <img src={mostRecent.track.album.images[0].length === 0 ? \n                            CDImage\n                            : \n                            mostRecent.track.album.images[0].url}\n                            className=\"recent-img\"/>\n                            <div className=\"most-recent-info\">\n                                <p className=\"most-recent-name\">{mostRecent.track.name}</p>\n                                <p className=\"most-recent-artist-name\">{mostRecent.track.artists[0].name}</p>\n                            </div>\n                        </li>\n                        )\n                    })}\n                </ul>\n            </>\n        )\n    }\n    return null;\n}","import React, {useState, useEffect} from 'react'\nimport SpotifyPlayer from 'react-spotify-web-playback'\n\n\nexport default function Player({ accessToken, trackUri, songURIs, offset }) {\n\n    const [play, setPlay] = useState(false)\n\n    useEffect(() => {\n        console.log(trackUri)\n        console.log(offset)\n        setPlay(true)\n    }, [trackUri])\n    \n    if (!accessToken) return null\n    return <SpotifyPlayer \n        token={accessToken}\n        showSaveIcon\n        autoPlay={true}\n        play={play}\n        initialVolume={.5}\n        uris={songURIs}\n        offset={offset}\n        styles={{\n            activeColor: '#fff',\n            bgColor: '#333',\n            color: '#fff',\n            loaderColor: '#fff',\n            sliderColor: '#1cb954',\n            trackArtistColor: '#ccc',\n            trackNameColor: '#fff',\n        }}\n    />\n}","import '../Styling/SongRender.css'\n\nexport default function SongRender({ song, chooseTrack, index }) {\n    const { track } = song;\n    let img = ''\n\n    function msConverter(time) {\n        var minutes = Math.floor(time / 60000);\n        var seconds = ((time % 60000) / 1000).toFixed(0);\n        return (\n            seconds == 60 ?\n            (minutes+1) + \":00\" :\n            minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds\n        );\n    }\n\n    function handleClick() {\n        chooseTrack(track.uri, song, index)\n    }\n\n    track.album.images.length == 0 ? \n    img = 'https://www.pngall.com/wp-content/uploads/2016/04/Compact-Disk-Download-PNG.png' \n    : \n    img = track.album.images[0].url\n\n    return (\n        <li className=\"song-li-container\" onClick={handleClick}>\n            <div className=\"album-img\">\n                <img src={img} className=\"album-cover\" />\n            </div>\n            <div className=\"song-info\">\n                <p className=\"song-name\">{track.name}</p>\n                <p className=\"artist-name\">{track.artists[0].name}</p>\n            </div>\n            <div className=\"album-name\">\n                <p className=\"album-name-p\">{track.album.name}</p>\n            </div>\n            <div className=\"time\">\n                <p className=\"time-p\">{msConverter(track.duration_ms)}</p>\n            </div>\n        </li>\n    )\n}","import SongRender from './SongRender'\nimport '../Styling/SongRender.css'\n\nexport default function SongListContainer({ songList, chooseTrack }){\n    return(\n        <>\n            <ul className=\"song-ul\">\n                {songList.map((song, index) => {\n                    if(song.is_local) {\n                        return;\n                    }else {\n                        return <SongRender key={song.track.id} song={song} index={index} chooseTrack={chooseTrack} />\n                    }\n                })}\n            </ul>\n        </>\n    )\n}","import React, {  useEffect, useState } from 'react'\nimport axios from 'axios'\nimport '../Styling/App.css'\nimport PlaylistFetch from './PlaylistFetch'\nimport SideBar from './SideBar'\nimport '../Styling/SideBar.css'\nimport Player from './Player'\nimport SongListContainer from './SongListContainer'\nimport {Redirect} from 'react-router-dom'\n\nexport default function Dashboard({ accessToken }) {\n    const [songURIs, setSongURIs] = useState([])\n    const [currentGenreID, setCurrentGenreID] = useState(null)\n    const [genrePlaylists, setGenrePlaylists] = useState([])\n    const [songList, setSongList] = useState([])\n    const [playingTrack, setPlayingTrack] = useState()\n    const [recentlyPlayedTrack, setRecentlyPlayedTrack] = useState([])\n    const [offset, setOffset] = useState(0)\n    \n    function handleGenreChange(id) {\n        setCurrentGenreID(id)\n    }\n    useEffect(() => {\n        if(currentGenreID === \"\"){\n            axios.get(`https://api.spotify.com/v1/me/playlists?limit=20`, {\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ` + accessToken\n                }\n            })\n            .then(resp => {\n                setSongList([])\n                setGenrePlaylists(resp.data.items)\n            })\n            .catch((error) => console.log(error))\n        }\n        else{\n            axios.get(`https://api.spotify.com/v1/browse/categories/${currentGenreID}/playlists?limit=20`, {\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ` + accessToken\n                }\n                })\n                .then(resp => {\n                    setSongList([])\n                    setGenrePlaylists(resp.data.playlists.items)\n                })\n            .catch((error) => console.log(error))\n        }\n    }, [currentGenreID])\n\n\n    function handlePlaylistClick(id) {\n        axios.get(`https://api.spotify.com/v1/playlists/${id}/tracks?market=US` , {\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ` + accessToken\n            }\n        })\n        .then(resp => {\n            let filteredList = resp.data.items.filter(song => !song.is_local)\n            console.log(filteredList)\n            let uriList = filteredList.map(song => {\n                return song.track.uri\n            })\n            console.log(uriList)\n            setSongList(filteredList)\n            setSongURIs(uriList)\n        })\n        .catch((error) => console.log(error))\n    }\n\n\n    function chooseTrack(track, song, index) {\n        setPlayingTrack(track)\n        setOffset(index)\n        \n        if(containsSong(song, recentlyPlayedTrack) === true) {\n            let newArr = recentlyPlayedTrack.filter(item => {\n                return (item.track.id !== song.track.id)\n            })\n\n            if(recentlyPlayedTrack.length >= 5) {\n                setRecentlyPlayedTrack([song, ...newArr.slice(0, 5)])\n            }else {\n                setRecentlyPlayedTrack([song, ...newArr])\n            }\n        } else {\n            if(recentlyPlayedTrack.length >= 5) {\n                setRecentlyPlayedTrack([song, ...recentlyPlayedTrack.slice(0, 4)])\n            }else {\n                setRecentlyPlayedTrack([song, ...recentlyPlayedTrack])\n            }\n        }\n    }\n\n    function containsSong(song, recentlyPlayedTrack) {\n        let i;\n        for (i = 0; i < recentlyPlayedTrack.length; i++) {\n            if(recentlyPlayedTrack[i].track.id === song.track.id){\n                return true\n            } \n        }\n        return false\n    }\n\n    if(!accessToken) {\n        return <Redirect to=\"/login\" />\n    }else {\n        return (\n            <div className=\"dashboard\">\n                <aside className=\"side-bar\">\n                    <SideBar accessToken={accessToken} handleGenreChange={handleGenreChange} recentlyPlayedTrack={recentlyPlayedTrack} chooseTrack={chooseTrack}/>\n                </aside>\n                <div className=\"playlist-song-container\">\n                {songList.length === 0 ? \n                    <PlaylistFetch accessToken={accessToken} genrePlaylists={genrePlaylists} handlePlaylistClick={handlePlaylistClick} />\n                    :\n                    <SongListContainer songList={songList} chooseTrack={chooseTrack} />\n                    }\n                </div>\n                <div className=\"player-container\">\n                    {playingTrack ? <Player accessToken={accessToken} trackUri={playingTrack} offset={offset} songURIs={songURIs} /> : null}\n                </div>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/potato.35e51a62.png\";","import React from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport '../Styling/NavBar.css'\nimport potato from '../Images/potato.png'\n\nconst linkStyles = {\n  width: \"100px\",\n  padding: \"12px\",\n  margin: \"0 6px 6px\",\n  background: \"#00f000\",\n  textDecoration: \"none\",\n  color: \"rgba(255,255,255,.87)\",\n};\n\nfunction Navbar({ accessToken, setAccessToken }) {\n  const history = useHistory();\n\n  function handleLogout() {\n    setAccessToken(null);\n    history.push(\"/login\");\n  }\n\n  return (\n    <div className=\"nav-bar\">\n      <NavLink\n        to=\"/dashboard\"\n        exact\n        style={linkStyles}\n        activeStyle={{\n          background: \"#1db954\",\n      }}>\n        Dashboard\n      </NavLink>\n      {accessToken ?\n      <NavLink onClick={handleLogout}\n        to=\"/\"\n        style={linkStyles}\n        activeStyle={{\n          background: \"#1db954\",\n      }}>Logout\n      </NavLink>\n      :\n      <NavLink\n        to=\"/login\"\n        exact\n        style={linkStyles}\n        activeStyle={{\n          background: \"#1db954\",\n      }}>\n        Login\n      </NavLink> \n      }\n      <img src={potato} alt='potato' id=\"potato-img\" />\n    </div>\n  );\n}\n\nexport default Navbar;","import '../Styling/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Login from './Login';\nimport Dashboard from './Dashboard'\nimport Navbar from './NavBar';\nimport { Route, Switch, Redirect} from 'react-router-dom'\nimport React, {useEffect, useState} from 'react';\n\nconst params = new URLSearchParams(window.location.hash.substr(1));\nconst accessToken = params.get(\"access_token\")\n\nfunction App() {\n  const [accessTokenState, setAccessToken] = useState()\n  useEffect(() => {\n    if(accessToken){\n    setAccessToken(accessToken)\n    }\n  },[accessToken])\n  return (\n    <div>\n      <Navbar accessToken={accessTokenState} setAccessToken={setAccessToken} params={params}/>\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/dashboard\">\n          <Dashboard accessToken={accessTokenState} />\n        </Route>\n      </Switch>\n      {accessTokenState ? <Redirect to=\"/dashboard\" /> : <Redirect to=\"/login\" /> }\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styling/index.css';\nimport App from './Components/App';\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Route path=\"/\" component={App} />\n    </React.StrictMode>\n  </Router>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}